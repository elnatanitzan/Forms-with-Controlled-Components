{"version":3,"sources":["CircleChange.js","FormComp.js","App.js","index.js"],"names":["CircleChange","stateColor","this","props","color","shadowColor","shadow","keyframes","Elem","styled","div","className","first","Component","FormComp","name","type","maxLength","placeholder","value","onChange","handleChange","defaultValue","hidden","App","state","event","target","setState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAGqBA,E,4JAIjB,WACI,IAAMC,EAAaC,KAAKC,MAAMC,MACxBC,EAA6B,YAAfJ,EAA2B,aAAeA,EACxDK,EAASC,YAAH,8KACqBF,EACEA,EACJA,GAEzBG,EAAOC,IAAOC,IAAV,2WAKQT,EAKDK,GAGjB,OACI,qBAAKK,UAAU,gBAAf,SACI,cAACH,EAAD,CAAMG,UAAU,SAAhB,SACI,6BAAKT,KAAKC,MAAMS,gB,GA5BMC,aCDrBC,E,4JAEjB,WACI,OACI,iCACI,qDACI,uBACIC,KAAK,QACLC,KAAK,OACLC,UAAU,KACVC,YAAY,mBAEZC,MAAOjB,KAAKC,MAAMS,MAElBQ,SAAUlB,KAAKC,MAAMkB,kBAG7B,oDACI,yBAAQN,KAAK,QAAQI,MAAOjB,KAAKC,MAAMC,MAAOgB,SAAUlB,KAAKC,MAAMkB,aAAnE,UACI,wBAAQC,cAAY,EAACC,QAAM,EAA3B,uCACA,wBAAQJ,MAAM,UAAd,qBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,QAAd,gC,GAxBcN,aCIhCW,E,4MAEJC,MAAQ,CACNb,MAAO,GACPR,MAAO,I,EAITiB,aAAe,SAACK,GACZ,MAAwBA,EAAMC,OAAtBZ,EAAR,EAAQA,KAAMI,EAAd,EAAcA,MACd,EAAKS,SAAL,eAAiBb,EAAOI,K,4CAG5B,WACE,OACE,gCACE,sGACA,cAAC,EAAD,CACAP,MAAOV,KAAKuB,MAAMb,MAClBR,MAAOF,KAAKuB,MAAMrB,MAClBiB,aAAcnB,KAAKmB,eAEnB,cAAC,EAAD,CACAT,MAAOV,KAAKuB,MAAMb,MAClBR,MAAOF,KAAKuB,MAAMrB,e,GAxBRS,aA8BHW,IChCfK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7de48e2c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nexport default class CircleChange extends Component {\r\n    \r\n  \r\n\r\n    render() {\r\n        const stateColor = this.props.color;\r\n        const shadowColor = stateColor === 'default' ? 'whitesmoke' : stateColor;\r\n        const shadow = keyframes `\r\n            from { box-shadow: 0 0 0 0 ${shadowColor};}\r\n            50% { box-shadow: 0 0 50px 0 ${shadowColor}; }\r\n            to { box-shadow: 0 0 0 0 ${shadowColor};}\r\n        `;\r\n        const Elem = styled.div `\r\n            display: grid;\r\n            place-items: center;\r\n            width: 150px;\r\n            height: 150px;\r\n            background: ${stateColor};\r\n            transition: background .7s;\r\n            border-radius: 50%;\r\n            position: relative;\r\n            text-align: center;\r\n            animation: ${shadow} 2s infinite;\r\n        `;\r\n\r\n        return (\r\n            <div className=\"dynamic-color\">\r\n                <Elem className=\"circle\">\r\n                    <h3>{this.props.first}</h3>\r\n                </Elem>\r\n            </div>\r\n        )    \r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class FormComp extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <form>\r\n                <label>Conrolled Input:\r\n                    <input\r\n                        name=\"first\"\r\n                        type=\"text\"\r\n                        maxLength=\"15\"\r\n                        placeholder=\"Type your name..\"\r\n                        // Here we get the state value from father (App.js):\r\n                        value={this.props.first}\r\n                         // Here we lift state from this comp to father (App.js):\r\n                        onChange={this.props.handleChange}\r\n                    />\r\n                </label>\r\n                <label> Dynamic Color: \r\n                    <select name=\"color\" value={this.props.color} onChange={this.props.handleChange}>\r\n                        <option defaultValue hidden>Pick your favorite Color:</option>\r\n                        <option value=\"default\">Default</option>\r\n                        <option value=\"red\">Red</option>\r\n                        <option value=\"blue\">Blue</option>\r\n                        <option value=\"yellow\">Yellow</option>\r\n                        <option value=\"green\">Green</option>\r\n                    </select>\r\n                </label>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport './App.scss';\nimport CircleChange from './CircleChange';\nimport FormComp from './FormComp';\n\n\nclass App extends Component  {\n\n  state = {\n    first: '',\n    color: '',\n    \n  };\n\n  handleChange = (event) => {\n      const { name, value } = event.target;\n      this.setState({ [name]: value });\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Forms with Controlled Components & Lift state from Child to Father: </h1>\n        <FormComp \n        first={this.state.first}\n        color={this.state.color}\n        handleChange={this.handleChange}/>\n\n        <CircleChange \n        first={this.state.first}\n        color={this.state.color}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}