{"version":3,"sources":["FormComp.js","App.js","index.js"],"names":["FormComp","state","first","color","handleChange","event","target","name","value","setState","type","maxLength","placeholder","this","onChange","selected","hidden","className","style","background","Component","App","fname","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAEqBA,E,4MAEjBC,MAAQ,CACJC,MAAO,GACPC,MAAO,I,EAGXC,aAAe,SAACC,GACZ,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBF,EAAOC,K,4CAG5B,WACI,OACI,iCACI,qDACI,uBACID,KAAK,QACLG,KAAK,OACLC,UAAU,KACVC,YAAY,oBACZJ,MAAOK,KAAKZ,MAAMC,MAClBY,SAAUD,KAAKT,kBAGvB,oDACI,yBAAQG,KAAK,QAAQC,MAAOK,KAAKZ,MAAME,MAAOW,SAAUD,KAAKT,aAA7D,UACI,wBAAQW,UAAQ,EAACC,QAAM,EAAvB,uCACA,wBAAQR,MAAM,UAAd,qBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,QAAd,yBAGR,qBAAKS,UAAU,gBAAf,SACI,qBAAKC,MAAO,CAACC,WAAiC,YAArBN,KAAKZ,MAAME,MAAsB,GAAKU,KAAKZ,MAAME,OAA1E,SACA,6BAAKU,KAAKZ,MAAMC,mB,GArCEkB,aCEhCC,E,4MAEJpB,MAAQ,CACNqB,MAAO,I,EAGTlB,aAAe,SAACC,GACd,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBF,EAAOC,K,4CAG1B,WACE,OACE,gCACE,oEACA,cAAC,EAAD,W,GAfUY,aAqBHC,ICrBfE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3a48841c.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class FormComp extends Component {\r\n    \r\n    state = {\r\n        first: '',\r\n        color: ''\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form>\r\n                <label>Conrolled Input:\r\n                    <input\r\n                        name=\"first\"\r\n                        type=\"text\"\r\n                        maxLength=\"15\"\r\n                        placeholder=\"Write your name..\"\r\n                        value={this.state.first}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </label>\r\n                <label> Dynamic Color: \r\n                    <select name=\"color\" value={this.state.color} onChange={this.handleChange}>\r\n                        <option selected hidden>Pick your favorite Color:</option>\r\n                        <option value=\"default\">Default</option>\r\n                        <option value=\"red\">Red</option>\r\n                        <option value=\"blue\">Blue</option>\r\n                        <option value=\"yellow\">Yellow</option>\r\n                        <option value=\"green\">Green</option>\r\n                    </select>\r\n                </label>\r\n                <div className=\"dynamic-color\">\r\n                    <div style={{background: this.state.color === \"default\" ? \"\" : this.state.color}}>\r\n                    <h3>{this.state.first}</h3>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport './App.scss';\nimport FormComp from './FormComp';\n\nclass App extends Component  {\n\n  state = {\n    fname: '',\n  };\n  \n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n};\n  \n  render() {\n    return (\n      <div>\n        <h1>Forms with Controlled Components: </h1>\n        <FormComp />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}