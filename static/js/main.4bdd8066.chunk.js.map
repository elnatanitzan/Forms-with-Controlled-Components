{"version":3,"sources":["CircleChange.js","FormComp.js","App.js","index.js"],"names":["CircleChange","className","style","background","this","props","color","first","Component","FormComp","name","type","maxLength","placeholder","value","onChange","handleChange","selected","hidden","App","state","event","target","setState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAEqBA,E,4JACjB,WACI,OACI,qBAAKC,UAAU,gBAAf,SACQ,qBAAKC,MAAO,CAACC,WAAiC,YAArBC,KAAKC,MAAMC,MAAsB,GAAKF,KAAKC,MAAMC,OAA1E,SACA,6BAAKF,KAAKC,MAAME,gB,GALMC,aCArBC,E,4JAEjB,WACI,OACI,iCACI,qDACI,uBACIC,KAAK,QACLC,KAAK,OACLC,UAAU,KACVC,YAAY,mBAEZC,MAAOV,KAAKC,MAAME,MAElBQ,SAAUX,KAAKC,MAAMW,kBAG7B,oDACI,yBAAQN,KAAK,QAAQI,MAAOV,KAAKC,MAAMC,MAAOS,SAAUX,KAAKC,MAAMW,aAAnE,UACI,wBAAQC,UAAQ,EAACC,QAAM,EAAvB,uCACA,wBAAQJ,MAAM,UAAd,qBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,QAAd,gC,GAxBcN,aCGhCW,E,4MAEJC,MAAQ,CACNb,MAAO,GACPD,MAAO,I,EAGTU,aAAe,SAACK,GACZ,MAAwBA,EAAMC,OAAtBZ,EAAR,EAAQA,KAAMI,EAAd,EAAcA,MACd,EAAKS,SAAL,eAAiBb,EAAOI,K,4CAG5B,WACE,OACE,gCACE,oEACA,cAAC,EAAD,CACAP,MAAOH,KAAKgB,MAAMb,MAClBD,MAAOF,KAAKgB,MAAMd,MAClBU,aAAcZ,KAAKY,eAEnB,cAAC,EAAD,CACAT,MAAOH,KAAKgB,MAAMb,MAClBD,MAAOF,KAAKgB,MAAMd,e,GAvBRE,aA6BHW,IC9BfK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4bdd8066.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class CircleChange extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"dynamic-color\">\r\n                    <div style={{background: this.props.color === \"default\" ? \"\" : this.props.color}}>\r\n                    <h3>{this.props.first}</h3>\r\n                    </div>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class FormComp extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <form>\r\n                <label>Conrolled Input:\r\n                    <input\r\n                        name=\"first\"\r\n                        type=\"text\"\r\n                        maxLength=\"15\"\r\n                        placeholder=\"Type your name..\"\r\n                        // Here we get the state value from father (App.js):\r\n                        value={this.props.first}\r\n                         // Here we lift state from this comp to father (App.js):\r\n                        onChange={this.props.handleChange}\r\n                    />\r\n                </label>\r\n                <label> Dynamic Color: \r\n                    <select name=\"color\" value={this.props.color} onChange={this.props.handleChange}>\r\n                        <option selected hidden>Pick your favorite Color:</option>\r\n                        <option value=\"default\">Default</option>\r\n                        <option value=\"red\">Red</option>\r\n                        <option value=\"blue\">Blue</option>\r\n                        <option value=\"yellow\">Yellow</option>\r\n                        <option value=\"green\">Green</option>\r\n                    </select>\r\n                </label>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport './App.scss';\nimport CircleChange from './CircleChange';\nimport FormComp from './FormComp';\n\nclass App extends Component  {\n\n  state = {\n    first: '',\n    color: ''\n  };\n\n  handleChange = (event) => {\n      const { name, value } = event.target;\n      this.setState({ [name]: value });\n  };\n  \n  render() {\n    return (\n      <div>\n        <h1>Forms with Controlled Components: </h1>\n        <FormComp \n        first={this.state.first}\n        color={this.state.color}\n        handleChange={this.handleChange}/>\n\n        <CircleChange \n        first={this.state.first}\n        color={this.state.color}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}